<?require($_SERVER["DOCUMENT_ROOT"]."/bitrix/modules/main/include/prolog_before.php");global $USER, $APPLICATION;if (!CModule::IncludeModule("sale")){	echo "nosale";	return;}if (!CModule::IncludeModule("iblock")){	echo "noiblock";	return;}if (!CModule::IncludeModule("blog")){	echo "noblog";	return;}if($_REQUEST["do"]=="addMe"){	$ids = $_REQUEST["ids"];	$full_sum = 0;	$tovar_count = 0;	$element_count = 0;	$value = array();	if(preg_match("/[0-9\|#]+/is",$ids)){		$ids = explode("##",$ids);		foreach($ids as $id){			$idc = explode("||",$id);			$idsh = intval($idc[0]);			$count = intval($idc[1]);			if($idsh>0 && $count>0){				$arFilter = array(					"IBLOCK_ID"=>CERTIFICATES_IBLOCK_ID,					"ID" => $idsh				);				$arSelect = array("ID","NAME","PROPERTY_PRICE");				$res = CIBlockElement::GetList(Array(), $arFilter, false, false, $arSelect);				if($ar_res = $res->GetNext()){					$ar_res["COUNT"] = $count;					$full_sum += $count*$ar_res["PROPERTY_PRICE_VALUE"];					$element_count += $count;					$value[] = $ar_res;					$tovar_count++;				}			}		}		if($full_sum>0){			$el = new CSaleOrder;						$arFields = array(				"LID"=>SITE_ID,				"PERSON_TYPE_ID"=>PERSON_TYPE_ID_VALUE,				"PAYED"=>"N",				"CANCELED"=>"N",				"STATUS_ID"=>"N",				"CURRENCY" => "RUB",				"PRICE" => $full_sum,				"USER_ID" => IntVal($USER->GetID()),				"PAY_SYSTEM_ID" =>PAY_SYSTEM_CERTIFICATE,				"PRICE_DELIVERY" => 0,				"DELIVERY_ID" => DELIVERY_ID_CERTIFICATE,				"DISCOUNT_VALUE" => 0,				"TAX_VALUE" => 0,				"USER_DESCRIPTION" => "certificate_me"			);						//print_R($arFields);			if(!$ORDER_ID = $el->Add($arFields))				echo "Error: ".$el->LAST_ERROR;			$ORDER_ID = IntVal($ORDER_ID);			if($ORDER_ID>0){				foreach($value as $v){					$arFields = array(						"PRODUCT_ID" => $v["ID"],						"PRICE" => $v["PROPERTY_PRICE_VALUE"],						"CURRENCY" => "RUB",						"QUANTITY" => $v["COUNT"],						"LID" => LANG,						"DELAY" => "N",    						"CAN_BUY" => "Y",						"NAME" => $v["NAME"],						"ORDER_ID" => $ORDER_ID					);					CSaleBasket::Add($arFields);				}								$APPLICATION->IncludeComponent("individ:sale.order.payment","",Array(						 "ORDER_ID_VALUE"=>$ORDER_ID					 )				 );			}		}	}	return;}if($_REQUEST["do"]=="addFor"){	$ids = $_REQUEST["ids"];	$full_sum = 0;	$forUser = intval($_REQUEST["forUser"]);	$tovar_count = 0;	$element_count = 0;	$value = array();	if(preg_match("/[0-9\|#]+/is",$ids)){		$ids = explode("##",$ids);		foreach($ids as $id){			$idc = explode("||",$id);			$idsh = intval($idc[0]);			$count = intval($idc[1]);			if($idsh>0 && $count>0){				$arFilter = array(					"IBLOCK_ID"=>CERTIFICATES_IBLOCK_ID,					"ID" => $idsh				);				$arSelect = array("ID","NAME","PROPERTY_PRICE");				$res = CIBlockElement::GetList(Array(), $arFilter, false, false, $arSelect);				if($ar_res = $res->GetNext()){					$ar_res["COUNT"] = $count;					$full_sum += $count*$ar_res["PROPERTY_PRICE_VALUE"];					$element_count += $count;					$value[] = $ar_res;					$tovar_count++;				}			}		}		if($full_sum>0){			$el = new CSaleOrder;						$arFields = array(				"LID"=>SITE_ID,				"PERSON_TYPE_ID"=>PERSON_TYPE_ID_VALUE,				"PAYED"=>"N",				"CANCELED"=>"N",				"STATUS_ID"=>"N",				"CURRENCY" => "RUB",				"PRICE" => $full_sum,				"USER_ID" => IntVal($USER->GetID()),				"PAY_SYSTEM_ID" =>PAY_SYSTEM_CERTIFICATE,				"PRICE_DELIVERY" => 0,				"DELIVERY_ID" => DELIVERY_ID_CERTIFICATE,				"DISCOUNT_VALUE" => 0,				"TAX_VALUE" => 0,				"USER_DESCRIPTION" => "certificate_for_".$forUser			);						//print_R($arFields);			if(!$ORDER_ID = $el->Add($arFields))				echo "Error: ".$el->LAST_ERROR;			$ORDER_ID = IntVal($ORDER_ID);			if($ORDER_ID>0){				foreach($value as $v){					$arFields = array(						"PRODUCT_ID" => $v["ID"],						"PRICE" => $v["PROPERTY_PRICE_VALUE"],						"CURRENCY" => "RUB",						"QUANTITY" => $v["COUNT"],						"LID" => LANG,						"DELAY" => "N",    						"CAN_BUY" => "Y",						"NAME" => $v["NAME"],						"ORDER_ID" => $ORDER_ID					);					CSaleBasket::Add($arFields);				}								$APPLICATION->IncludeComponent("individ:sale.order.payment","",Array(						 "ORDER_ID_VALUE"=>$ORDER_ID					 )				 );			}		}	}	return;}if($_REQUEST["do"]=="addForPresent"){	global $USER;	$this_user = $USER->GetID();	$ids = $_REQUEST["ids"];	$full_sum = 0;	$forUser = intval($_REQUEST["forUser"]);	$tovar_count = 0;	$element_count = 0;	$value = array();	if(preg_match("/[0-9\|#]+/is",$ids)){		$ids = explode("##",$ids);		foreach($ids as $id){			$idc = explode("||",$id);			$idsh = intval($idc[0]);			$count = intval($idc[1]);			if($idsh>0 && $count>0){				$db_props = CIBlockElement::GetList(array(),array("IBLOCK_ID"=>CERTIFICATES_IBLOCK_ID, "ID"=>$idsh) , false, false);				$i1=0;				if($ar_props = $db_props->GetNextElement()){					$val = $ar_props->GetProperties();					if(isset($val["HAVE"]) && is_array($val["HAVE"])){						foreach($val["HAVE"]["VALUE"] as $k=>$v){																					$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(								"VALUE"=>$v,								"DESCRIPTION"=>$val["HAVE"]["DESCRIPTION"][$k]							);															if($v==$this_user){								if($val["HAVE"]["DESCRIPTION"][$k]<$count)									$count = $val["HAVE"]["DESCRIPTION"][$k];								$val1 = $val["HAVE"]["DESCRIPTION"][$k] - $count;								if($val1>0){									$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(									"VALUE"=>$v,									"DESCRIPTION"=>$val1);								}								else{									$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(									"VALUE"=>'',									"DESCRIPTION"=>'');								}								echo $this_user." ".$val1;							}														if($v==$forUser){								$i1++;								$val1 = $val["HAVE"]["DESCRIPTION"][$k] + $count;								$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(								"VALUE"=>$v,								"DESCRIPTION"=>$val1);								echo $forUser." ".$val1;							}													}						$idHave = $val["HAVE"]["ID"];						if($i1==0){							$arFields[$idHave][] = array(								"VALUE"=>$forUser,								"DESCRIPTION"=>intval($count)								);						}					}				}												//print_R($arFields);				CIBlockElement::SetPropertyValuesEx($idsh , CERTIFICATES_IBLOCK_ID, $arFields);				for($i=0;$i<$count;$i++){								$el = new CIBlockElement;				$arLoadProductArray = Array(					"IBLOCK_ID"=>CERTIFICATES_PRESENT_IBLOCK_ID,					"PROPERTY_VALUES"=> array(						"CERTIFICATE_ID"=>$idsh,						"USER_BY"=>$this_user,						"USER_PRESENT"=>$forUser,						"STATUS"=>CERTIFICATE_STATUS_OK						),					"NAME"           => "Подарок от ".$this_user." для ".$forUser." ".$idsh,  					"ACTIVE"         => "Y",				);								if($PRODUCT_ID = $el->Add($arLoadProductArray)) {					echo "New ID: ".$PRODUCT_ID;					$type = new IBlogType;										$rsUser = CUser::GetByID($this_user);					$arUser = $rsUser->Fetch();					$thisMail = "";					if(is_array($arUser)){						$thisName = "";						if(!empty($arUser["NAME"]))							$thisName = $arUser["NAME"];													if(!empty($arUser["LAST_NAME"]))							if(empty($thisName))								$thisName = $arUser["LAST_NAME"];							else								$thisName .= " ".$arUser["LAST_NAME"];														if(empty($thisName))							$thisName = $arUser["LOGIN"];													$thisMail = $arUser["EMAIL"];					}					$toMail = "";					$rsUser = CUser::GetByID($forUser);					$arUser = $rsUser->Fetch();					if(is_array($arUser)){						$toName = "";												if(!empty($arUser["NAME"]))							$toName = $arUser["NAME"];													if(!empty($arUser["LAST_NAME"]))							if(empty($toName))								$toName = $arUser["LAST_NAME"];							else								$toName .= " ".$arUser["LAST_NAME"];														if(empty($toName))							$toName = $arUser["LOGIN"];													$toMail = $arUser["EMAIL"];					}										if(!empty($toMail) && !empty($thisMail)){					$arEventFields = array(						"FROM_USER_EMAIL"            => $thisMail,						"TO_USER_EMAIL"            => $toMail,						"FROM_USER"               => $thisName,						"TO_USER"               => $toName						);					CEvent::Send("SEND_CERTIF_PRESENT", SITE_ID, $arEventFields);					}										//$newID = CBlogPost::Add($arFields);					$certif = array();					$certif["USER_TO"] = $this_user;					$certif["USER_FROM"] = $forUser;					$certif["CERTIFICATE"] = $idsh;					$certif = serialize($certif);					$arBlog = CBlog::GetByOwnerID($this_user);					if(is_array($arBlog)){						$arFields = array(							"TITLE" => 'CERTIFICATES #'.$PRODUCT_ID,							"DETAIL_TEXT" => $certif,							"BLOG_ID" => $arBlog["ID"],							"AUTHOR_ID" => $this_user,							"=DATE_CREATE" => $DB->GetNowFunction(),							"PUBLISH_STATUS" => BLOG_PUBLISH_STATUS_PUBLISH,							"ENABLE_TRACKBACK" => 'N',							"ENABLE_COMMENTS" => 'Y'						);						$newID = CBlogPost::Add($arFields);						if(IntVal($newID)>0){							$type->ISetType($newID,CERTIFICATE_TYPE);							echo "Новое сообщение [".$newID."] добавлено.";														}						else							if ($ex = $APPLICATION->GetException())								echo $ex->GetString();						}					$arBlog = CBlog::GetByOwnerID($forUser);					if(is_array($arBlog)){						$arFields = array(							"TITLE" => 'CERTIFICATES #'.$PRODUCT_ID,							"DETAIL_TEXT" => $certif,							"BLOG_ID" => $arBlog["ID"],							"AUTHOR_ID" => $forUser,							"=DATE_CREATE" => $DB->GetNowFunction(),							"PUBLISH_STATUS" => BLOG_PUBLISH_STATUS_PUBLISH,							"ENABLE_TRACKBACK" => 'N',							"ENABLE_COMMENTS" => 'Y'						);						$newID = CBlogPost::Add($arFields);						if(IntVal($newID)>0){							$type->ISetType($newID,CERTIFICATE_TYPE);							echo "Новое сообщение [".$newID."] добавлено.";														}						else							if ($ex = $APPLICATION->GetException())								echo $ex->GetString();						}					}				else  					echo "Error: ".$el->LAST_ERROR;								}			}		}	}	return;}if($_REQUEST["do"]=="noCerf"){	$id = intval($_REQUEST["id"]);	if($id>0){		CIBlockElement::SetPropertyValuesEx($id, false, array("STATUS" => CERTIFICATE_STATUS_BACK));		$arFields = array(			"IBLOCK_ID"=>CERTIFICATES_PRESENT_IBLOCK_ID,			"ID"=>$id		);		$db_props = CIBlockElement::GetList(array(),$arFields, false, false, Array("*"));		if($ar_props = $db_props->GetNextElement())	{			$PROPERTIES = $ar_props->GetProperties();;		}		//print_R($PROPERTIES);		if($PROPERTIES["CERTIFICATE_ID"]["VALUE"]>0){						$db_props = CIBlockElement::GetList(array(),array("IBLOCK_ID"=>CERTIFICATES_IBLOCK_ID, "ID"=>$PROPERTIES["CERTIFICATE_ID"]["VALUE"]) , false, false);			$i1=0;			if($ar_props = $db_props->GetNextElement()){				$val = $ar_props->GetProperties();								if(isset($val["HAVE"]) && is_array($val["HAVE"])){					$arFields = array();				//	print_R($PROPERTIES["USER_PRESENT"]["VALUE"]);echo "=";					//print_R($PROPERTIES["USER_BY"]["VALUE"]);echo "=";										foreach($val["HAVE"]["VALUE"] as $k=>$v){												$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(							"VALUE"=>$v,							"DESCRIPTION"=>$val["HAVE"]["DESCRIPTION"][$k]						);												//	echo $v."-";						if($v==$PROPERTIES["USER_PRESENT"]["VALUE"]){							$val1 = $val["HAVE"]["DESCRIPTION"][$k]-1;							if($val1==0){							$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(							"VALUE"=>'',							"DESCRIPTION"=>'');							}							else{							$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(							"VALUE"=>$v,							"DESCRIPTION"=>$val1);							}						}												if($v==$PROPERTIES["USER_BY"]["VALUE"]){							$i1++;														$val1 = $val["HAVE"]["DESCRIPTION"][$k]+1;							$arFields[$val["HAVE"]["ID"]][$val["HAVE"]["PROPERTY_VALUE_ID"][$k]] = array(							"VALUE"=>$v,							"DESCRIPTION"=>$val1);						}											}					$idHave = $val["HAVE"]["ID"];					if($i1==0){						$arFields[$idHave][] = array(							"VALUE"=>$PROPERTIES["USER_BY"]["VALUE"],							"DESCRIPTION"=>1							);					}					//echo $PROPERTIES["CERTIFICATE_ID"]["VALUE"];					//print_R($arFields);										CIBlockElement::SetPropertyValuesEx($PROPERTIES["CERTIFICATE_ID"]["VALUE"], CERTIFICATES_IBLOCK_ID, $arFields); 				}			}		}	}	return;}?>